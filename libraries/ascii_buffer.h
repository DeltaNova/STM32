// ascii_buffer.h - SSD1306 OLED Display buffer
// Author: M. Tunstall
/*
  Copyright (C) 2015  Matthew Tunstall

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <stdint.h>         // Enable fixed width integers.

#ifndef ASCII_BUFFER_H
#define ASCII_BUFFER_H

// 128 x 64 ASCII Symbol&Text Buffer
#ifdef AVR_PROGMEM
    // USAGE: Place '#define AVR_PROGMEM' in main code to store the buffer in 
    //        program memory instead of sram
    #include <avr/pgmspace.h>
    const uint8_t ascii_buffer[1024] PROGMEM = {
#endif

#ifndef AVR_PROGMEM
    const uint8_t ascii_buffer[1024] = {
#endif
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 000 - NULL
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 001 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 002 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 003 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 004 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 005 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 006 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 007 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 008 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 009 -

    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 010 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 011 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 012 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 013 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 014 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 015 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 016 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 017 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 018 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 019 -

    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 020 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 021 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 022 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 023 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 024 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 025 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 026 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 027 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 028 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 029 -

    // Block Done - Needs Verification
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 030 -
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 031 -
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 032 - Space
    0x00, 0x00, 0x00, 0x5F, 0x00, 0x00,     // 033 - !
    0x00, 0x00, 0x07, 0x00, 0x07, 0x00,     // 034 - "
    0x00, 0x14, 0x7F, 0x14, 0x7F, 0x14,     // 035 - #
    0x00, 0x24, 0x2A, 0x7F, 0x2A, 0x12,     // 036 - $
    0x00, 0x23, 0x13, 0x08, 0x64, 0x62,     // 037 - %
    0x00, 0x36, 0x49, 0x56, 0x20, 0x50,     // 038 - &
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00,     // 039 - '

    // Block Done - Needs Verification
    0x00, 0x00, 0x1C, 0x22, 0x41, 0x00,     // 040 - (
    0x00, 0x00, 0x41, 0x22, 0x1C, 0x00,     // 041 - )
    0x00, 0x2A, 0x1C, 0x7F, 0x1C, 0x2A,     // 042 - *
    0x00, 0x08, 0x08, 0x3E, 0x08, 0x08,     // 043 - +
    0x00, 0x00, 0x40, 0x30, 0x00, 0x00,     // 044 - ,
    0x00, 0x08, 0x08, 0x08, 0x08, 0x08,     // 045 - -
    0x00, 0x00, 0x00, 0x20, 0x00, 0x00,     // 046 - .
    0x00, 0x20, 0x10, 0x08, 0x04, 0x02,     // 047 - /
    0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E,     // 048 - 0
    0x00, 0x00, 0x42, 0x7F, 0x40, 0x00,     // 049 - 1

    // Block Done - Needs Verification
    0x00, 0x72, 0x49, 0x49, 0x49, 0x46,     // 050 - 2
    0x00, 0x22, 0x41, 0x49, 0x49, 0x36,     // 051 - 3
    0x00, 0x18, 0x14, 0x12, 0x7F, 0x10,     // 052 - 4
    0x00, 0x27, 0x45, 0x45, 0x45, 0x39,     // 053 - 5
    0x00, 0x3C, 0x4A, 0x49, 0x49, 0x31,     // 054 - 6
    0x00, 0x41, 0x21, 0x11, 0x09, 0x07,     // 055 - 7
    0x00, 0x36, 0x49, 0x49, 0x49, 0x36,     // 056 - 8
    0x00, 0x46, 0x49, 0x49, 0x29, 0x1E,     // 057 - 9
    0x00, 0x00, 0x00, 0x14, 0x00, 0x00,     // 058 - :
    0x00, 0x00, 0x40, 0x34, 0x00, 0x00,     // 059 - ;

    // Block Done - Needs Verification
    0x00, 0x08, 0x14, 0x22, 0x41, 0x00,     // 060 - <
    0x00, 0x14, 0x14, 0x14, 0x14, 0x14,     // 061 - =
    0x00, 0x00, 0x41, 0x22, 0x14, 0x08,     // 062 - >
    0x00, 0x02, 0x01, 0x51, 0x09, 0x06,     // 063 - ?
    0x00, 0x3E, 0x41, 0x5D, 0x59, 0x4E,     // 064 - @
    0x00, 0x7C, 0x0A, 0x09, 0x0A, 0x7C,     // 065 - A
    0x00, 0x3E, 0x49, 0x49, 0x49, 0x36,     // 066 - B
    0x00, 0x3E, 0x41, 0x41, 0x41, 0x22,     // 067 - C
    0x00, 0x7F, 0x41, 0x41, 0x41, 0x3E,     // 068 - D
    0x00, 0x7F, 0x49, 0x49, 0x49, 0x41,     // 069 - E

    // Block Done - Needs Verification
    0x00, 0x7F, 0x09, 0x09, 0x09, 0x01,     // 070 - F
    0x00, 0x3E, 0x41, 0x41, 0x51, 0x32,     // 071 - G
    0x00, 0x7F, 0x04, 0x04, 0x04, 0x7F,     // 072 - H
    0x00, 0x00, 0x41, 0x7F, 0x41, 0x00,     // 073 - I
    0x00, 0x20, 0x41, 0x41, 0x3F, 0x01,     // 074 - J
    0x00, 0x7F, 0x08, 0x14, 0x22, 0x41,     // 075 - K
    0x00, 0x7F, 0x40, 0x40, 0x40, 0x40,     // 076 - L
    0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F,     // 077 - M
    0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F,     // 078 - N
    0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E,     // 079 - O

    // Block Done - Needs Verification
    0x00, 0x7F, 0x09, 0x09, 0x09, 0x06,     // 080 - P
    0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E,     // 081 - Q
    0x00, 0x7F, 0x09, 0x19, 0x29, 0x46,     // 082 - R
    0x00, 0x46, 0x49, 0x49, 0x49, 0x31,     // 083 - S
    0x00, 0x01, 0x01, 0x7F, 0x01, 0x01,     // 084 - T
    0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F,     // 085 - U
    0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F,     // 086 - V
    0x00, 0x3F, 0x40, 0x30, 0x40, 0x3F,     // 087 - W
    0x00, 0x63, 0x14, 0x08, 0x14, 0x63,     // 088 - X
    0x00, 0x07, 0x08, 0x70, 0x08, 0x07,     // 089 - Y

    // Block Done - Needs Verification
    0x00, 0x61, 0x51, 0x49, 0x45, 0x43,     // 090 - Z
    0x00, 0x00, 0x7F, 0x41, 0x41, 0x41,     // 091 - [
    0x00, 0x02, 0x04, 0x08, 0x10, 0x20,     // 092 - backslash
    0x00, 0x00, 0x41, 0x41, 0x41, 0x7F,     // 093 - ]
    0x00, 0x04, 0x02, 0x01, 0x02, 0x04,     // 094 - ^
    0x00, 0x40, 0x40, 0x40, 0x40, 0x40,     // 095 - _
    0x00, 0x00, 0x00, 0x06, 0x01, 0x00,     // 096 - `
    0x00, 0x20, 0x54, 0x54, 0x54, 0x78,     // 097 - a
    0x00, 0x7F, 0x50, 0x48, 0x48, 0x30,     // 098 - b
    0x00, 0x38, 0x44, 0x44, 0x44, 0x20,     // 099 - c

    // Block Done - Needs Verification
    0x00, 0x30, 0x48, 0x48, 0x50, 0x7F,     // 100 - d
    0x00, 0x38, 0x54, 0x54, 0x54, 0x18,     // 101 - e
    0x00, 0x08, 0x7E, 0x09, 0x01, 0x02,     // 102 - f
    0x00, 0x0C, 0x52, 0x52, 0x52, 0x3E,     // 103 - g
    0x00, 0x7F, 0x08, 0x04, 0x04, 0x78,     // 104 - h
    0x00, 0x00, 0x00, 0x7A, 0x00, 0x00,     // 105 - i
    0x00, 0x20, 0x40, 0x44, 0x3D, 0x00,     // 106 - j
    0x00, 0x7F, 0x10, 0x28, 0x44, 0x00,     // 107 - k
    0x00, 0x00, 0x41, 0x7F, 0x40, 0x00,     // 108 - l
    0x00, 0x7C, 0x04, 0x18, 0x04, 0x78,     // 109 - m

    //
    0x00, 0x7C, 0x08, 0x04, 0x04, 0x78,     // 110 - n
    0x00, 0x38, 0x44, 0x44, 0x44, 0x38,     // 111 - o
    0x00, 0x7C, 0x14, 0x14, 0x14, 0x08,     // 112 - p
    0x00, 0x08, 0x14, 0x14, 0x18, 0x7C,     // 113 - q
    0x00, 0x7C, 0x08, 0x04, 0x04, 0x08,     // 114 - r
    0x00, 0x48, 0x54, 0x54, 0x54, 0x20,     // 115 - s
    0x00, 0x04, 0x04, 0x3F, 0x44, 0x24,     // 116 - t
    0x00, 0x3C, 0x40, 0x40, 0x40, 0x3C,     // 117 - u
    0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C,     // 118 - v
    0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C,     // 119 - w

    0x00, 0x44, 0x28, 0x10, 0x28, 0x44,     // 120 - x
    0x00, 0x04, 0x48, 0x30, 0x08, 0x04,     // 121 - y
    0x00, 0x44, 0x64, 0x54, 0x4C, 0x44,     // 122 - z
    0x00, 0x00, 0x08, 0x36, 0x41, 0x41,     // 123 - {
    0x00, 0x00, 0x00, 0x7F, 0x00, 0x00,     // 124 - |
    0x00, 0x41, 0x41, 0x36, 0x08, 0x00,     // 125 - }
    0x00, 0x04, 0x02, 0x02, 0x02, 0x01,     // 126 - ~
    0x00, 0x2A, 0x55, 0x2A, 0x55, 0x2A,     // 127 - DELETE
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 128 -
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     // 129 -

    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 130 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 131 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 132 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 133 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 134 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 135 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 136 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 137 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 138 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 139 -

    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 140 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 141 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 142 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 143 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 144 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 145 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 146 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 147 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 148 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 149 -

    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 150 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 151 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 152 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 153 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 154 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 155 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 156 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 157 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 158 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 159 -

    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 160 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 161 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 162 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 163 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 164 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 165 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 166 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 167 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 168 -
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55,     // 169 -

    0xAA, 0x55, 0xAA, 0x55                  // Additional Unused Bytes
};
#endif // End ASCII_BUFFER_H
